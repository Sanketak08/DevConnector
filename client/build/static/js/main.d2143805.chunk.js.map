{"version":3,"sources":["components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","actions/alert.js","actions/types.js","components/auth/Register.js","actions/auth.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Navbar","className","to","Landing","Login","useState","email","password","formData","setFormData","onChange","e","target","name","value","onSubmit","a","preventDefault","console","log","type","placeholder","required","minLength","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","payload","setTimeout","connect","register","config","headers","body","JSON","stringify","axios","post","res","data","errors","response","forEach","error","password2","state","alerts","alert","length","map","key","initialState","token","localStorage","getItem","isAuthenticated","loading","user","combineReducers","action","filter","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Register","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA0BeA,EAvBA,WACX,OACI,yBAAKC,UAAU,kBACX,4BACI,kBAAC,IAAD,CAAMC,GAAG,KACL,uBAAGD,UAAU,gBADjB,kBAIJ,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,MAAT,eAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,aCQLC,EAxBC,WACZ,OACI,6BAASF,UAAU,WACf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,WAAd,uBACA,uBAAGA,UAAU,QAAb,wFAIA,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,mBAA/B,WAGA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,iBAA5B,c,gDC0CTG,EAxDD,WAAO,IAAD,EACgBC,mBAAS,CACrCC,MAAO,GACPC,SAAU,KAHE,mBACTC,EADS,KACCC,EADD,KAMRH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETG,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEnDC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,sDACbL,EAAEM,iBACFC,QAAQC,IAAI,WAFC,2CAAH,sDAKd,OACI,kBAAC,WAAD,KACI,wBAAIlB,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,8BAGA,0BAAMA,UAAU,OAAOc,SAAU,SAACJ,GAAD,OAAOI,EAASJ,KAC7C,yBAAKV,UAAU,cACX,2BACImB,KAAK,QACLC,YAAY,gBACZR,KAAK,QACLC,MAAOR,EACPI,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BW,UAAQ,KAGhB,yBAAKrB,UAAU,cACX,2BACImB,KAAK,WACLC,YAAY,WACZR,KAAK,WACLC,MAAOP,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BY,UAAU,OAGlB,2BACIH,KAAK,SACLnB,UAAU,kBACVa,MAAM,WAGd,uBAAGb,UAAU,QAAb,0BAC2B,kBAAC,IAAD,CAAMC,GAAG,aAAT,c,yBClD1BsB,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAACC,GACzD,IAAMC,EAAKC,IAAKC,KAEhBH,EAAS,CACLR,KCPiB,YDQjBY,QAAS,CACLP,MACAC,YACAG,QAIRI,YAAW,kBAAML,EAAS,CAAER,KCdJ,eDcwBY,QAASH,MAAOF,K,iBE+ErDO,cAAQ,KAAM,CAAEV,WAAUW,SCzFjB,SAAC,GAAD,IAAGtB,EAAH,EAAGA,KAAMP,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAOqB,GAAP,qBAAAZ,EAAA,6DAC7CoB,EAAS,CACXC,QAAS,CACL,eAAgB,qBAIlBC,EAAOC,KAAKC,UAAU,CAAE3B,OAAMP,QAAOC,aAPQ,kBAU7BkC,IAAMC,KAAK,aAAcJ,EAAMF,GAVF,OAUzCO,EAVyC,OAY/Cf,EAAS,CACLR,KFhBoB,mBEiBpBY,QAASW,EAAIC,OAd8B,iDAiBzCC,EAAS,KAAIC,SAASF,KAAKC,SAG7BA,EAAOE,SAAQ,SAACC,GAAD,OAAWpB,EAASJ,EAASwB,EAAMvB,IAAK,cAG3DG,EAAS,CACLR,KF1BiB,kBEE0B,yDAA/B,wDDyFTc,EAvFE,SAAC,GAA4B,IAA1BV,EAAyB,EAAzBA,SAAUW,EAAe,EAAfA,SAAe,EACT9B,mBAAS,CACrCQ,KAAM,GACNP,MAAO,GACPC,SAAU,GACV0C,UAAW,KAL0B,mBAClCzC,EADkC,KACxBC,EADwB,KAQjCI,EAAqCL,EAArCK,KAAMP,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAU0C,EAAczC,EAAdyC,UAEzBvC,EAAW,SAACC,GAAD,OACbF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEnDC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,sDACbL,EAAEM,iBACEV,IAAa0C,EACbzB,EAAS,yBAA0B,UAEnCW,EAAS,CAAEtB,OAAMP,QAAOC,aALf,2CAAH,sDASd,OACI,kBAAC,WAAD,KACI,wBAAIN,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,wBAGA,0BAAMA,UAAU,OAAOc,SAAU,SAACJ,GAAD,OAAOI,EAASJ,KAC7C,yBAAKV,UAAU,cACX,2BACImB,KAAK,OACLC,YAAY,OACZR,KAAK,OACLC,MAAOD,EACPH,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,yBAAKV,UAAU,cACX,2BACImB,KAAK,QACLC,YAAY,gBACZR,KAAK,QACLC,MAAOR,EACPI,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE9B,2BAAOV,UAAU,aAAjB,iFAKJ,yBAAKA,UAAU,cACX,2BACImB,KAAK,WACLC,YAAY,WACZR,KAAK,WACLC,MAAOP,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,yBAAKV,UAAU,cACX,2BACImB,KAAK,WACLC,YAAY,mBACZR,KAAK,YACLC,MAAOmC,EACPvC,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,2BACIS,KAAK,SACLnB,UAAU,kBACVa,MAAM,cAGd,uBAAGb,UAAU,QAAb,4BAC6B,kBAAC,IAAD,CAAMC,GAAG,UAAT,gBE9D1BgC,eAJS,SAACgB,GAAD,MAAY,CAChCC,OAAQD,EAAME,SAGHlB,EAjBD,SAAC,GAAD,IAAGiB,EAAH,EAAGA,OAAH,OACC,OAAXA,GACAA,EAAOE,OAAS,GAChBF,EAAOG,KAAI,SAACF,GAAD,OACP,yBAAKG,IAAKH,EAAMvB,GAAI5B,UAAS,sBAAiBmD,EAAM1B,YAC/C0B,EAAM3B,W,wCCRb+B,EAAe,GCCfA,EAAe,CACjBC,MAAOC,aAAaC,QAAQ,SAC5BC,gBAAiB,KACjBC,SAAS,EACTC,KAAM,MCFKC,4BAAgB,CAC3BX,MFFW,WAAyC,IAA/BF,EAA8B,uDAAtBM,EAAcQ,EAAQ,uCAC3C5C,EAAkB4C,EAAlB5C,KAAMY,EAAYgC,EAAZhC,QACd,OAAQZ,GACJ,IJNiB,YIOb,MAAM,GAAN,mBAAW8B,GAAX,CAAkBlB,IACtB,IJPoB,eIQhB,OAAOkB,EAAMe,QAAO,SAACb,GAAD,OAAWA,EAAMvB,KAAOG,KAChD,QACI,OAAOkB,IELfgB,KDGW,WAAyC,IAA/BhB,EAA8B,uDAAtBM,EAAcQ,EAAQ,uCAC3C5C,EAAkB4C,EAAlB5C,KAAMY,EAAYgC,EAAZhC,QAEd,OAAQZ,GACJ,ILXwB,mBKapB,OADOsC,aAAaS,QAAQ,QAASnC,EAAQyB,OACtC,uCACAP,GACAlB,GAFP,IAGI4B,iBAAiB,EACjBC,SAAS,IAEjB,ILlBqB,gBKoBjB,OADOH,aAAaU,WAAW,SACxB,2BACAlB,GADP,IAEIO,MAAO,KACPG,iBAAiB,EACjBC,SAAS,IAEjB,QACI,OAAOX,MEvBbmB,EAAa,CAACC,KAOLC,EALDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCkB5BO,EAlBH,kBACR,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAW5E,IACjC,6BAASF,UAAU,aACf,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,YAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAW3E,UClB9D6E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d2143805.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className='navbar bg-dark'>\r\n            <h1>\r\n                <Link to='/'>\r\n                    <i className='fas fa-code'></i> DevConnector\r\n                </Link>\r\n            </h1>\r\n            <ul>\r\n                <li>\r\n                    <Link to='!#'>Developers</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/register'>Register</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/login'>Login</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <section className='landing'>\r\n            <div className='dark-overlay'>\r\n                <div className='landing-inner'>\r\n                    <h1 className='x-large'>Developer Connector</h1>\r\n                    <p className='lead'>\r\n                        Create a developer profile/portfolio, share posts and\r\n                        get help from other developers\r\n                    </p>\r\n                    <div className='buttons'>\r\n                        <Link to='/register' className='btn btn-primary'>\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to='/login' className='btn btn-light'>\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('SUCCESS');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign In</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Sign In Into Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                    />\r\n                </div>\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-primary'\r\n                    value='Login'\r\n                />\r\n            </form>\r\n            <p className='my-1'>\r\n                Don't have an account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import uuid from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n    const id = uuid.v4();\r\n\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {\r\n            msg,\r\n            alertType,\r\n            id,\r\n        },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Sign Up</h1>\r\n            <p className='lead'>\r\n                <i className='fas fa-user'></i> Create Your Account\r\n            </p>\r\n            <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small className='form-text'>\r\n                        This site uses Gravatar so if you want a profile image,\r\n                        use a Gravatar email\r\n                    </small>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='password2'\r\n                        value={password2}\r\n                        onChange={(e) => onChange(e)}\r\n                    />\r\n                </div>\r\n                <input\r\n                    type='submit'\r\n                    className='btn btn-primary'\r\n                    value='Register'\r\n                />\r\n            </form>\r\n            <p className='my-1'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { setAlert, register })(Register);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter((alert) => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            token: localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n            token: localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport './App.css';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Fragment>\n                <Navbar />\n                <Route exact path='/' component={Landing} />\n                <section className='container'>\n                    <Alert />\n                    <Switch>\n                        <Route exact path='/register' component={Register} />\n                        <Route exact path='/login' component={Login} />\n                    </Switch>\n                </section>\n            </Fragment>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}